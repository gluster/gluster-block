---
##############################
# This playbook is called by Vagrant for initial VM provisioning.
# Bringup the gluster-block environment

- hosts: all
  become: true
  any_errors_fatal: true
  roles:
    - common

- hosts: servers
  become: true
  any_errors_fatal: true
  roles:
    - servers

- hosts: initiators
  become: true
  any_errors_fatal: true
  roles:
    - initiator

- hosts: servers[0]
  become: true
  any_errors_fatal: true
  vars:
    - server1_ip: "{{ hostvars[groups.servers[0]].ansible_eth1.ipv4.address }}"
    - server2_ip: "{{ hostvars[groups.servers[1]].ansible_eth1.ipv4.address }}"
    - server3_ip: "{{ hostvars[groups.servers[2]].ansible_eth1.ipv4.address }}"
    - bricks: "{{ server1_ip }}:/brick1 {{ server2_ip }}:/brick2 {{ server3_ip }}:/brick3"
    - servers_csv: "{{ server1_ip }},{{ server2_ip }},{{ server3_ip }}"
    - gluster_block: "/usr/local/sbin/gluster-block"
    - command_args: "create blockHostingVol/blockVol1 ha 3 prealloc full {{ servers_csv }} 1GiB --json-pretty"
  tasks:
    - name: Peer probe all nodes
      command: "gluster peer probe {{ hostvars[item].ansible_eth1.ipv4.address }}"
      with_items: "{{ groups.servers[1:] }}"

    - name: Create the block hosting volume
      command: "{{ item }}"
      with_items:
        - gluster vol create blockHostingVol replica 3 {{ bricks }} force
        - gluster vol set blockHostingVol group gluster-block
        - gluster vol start blockHostingVol

    - name: Create a 1GiB block volume
      register: create_out
      command: "{{ gluster_block }} {{ command_args }}"
    - debug:
        msg:
          - "# {{ gluster_block }} {{ command_args }}"
          - "{{ create_out.stdout_lines }}"
          - "{{ create_out.stderr_lines }}"

- hosts: initiators
  become: true
  any_errors_fatal: true
  vars:
    - portal1_ip: "{{ hostvars[groups.servers[0]].ansible_eth1.ipv4.address }}"
  tasks:

    - name: Get the IQN
      shell: "{{ item }}"
      register: got_iqn
      with_items:
          - echo {{ hostvars['server1']['create_out']['stdout_lines'] }} | cut -d',' -f2 | awk -F":" '{printf "%s:%s", $2, $3}'

    - name: Login to blockVol1
      command: "{{ item }}"
      register: login_out
      with_items:
          - iscsiadm -m discovery -t st -p {{ portal1_ip }}
          - iscsiadm -m node -T {{ got_iqn.results[0].stdout }} -l
    - debug:
        msg:
          - "# iscsiadm -m discovery -t st -p {{ portal1_ip }} "
          - "{{ login_out.results[0].stdout_lines }}"
          - "{{ login_out.results[0].stderr_lines }}"
          - "# iscsiadm -m node -T {{ got_iqn.results[0].stdout }} -l"
          - "{{ login_out.results[1].stdout_lines }}"
          - "{{ login_out.results[1].stderr_lines }}"

    - name: Show the multipath device
      command: lsblk
      register: lsblk_out
    - debug:
        msg:
          - "# lsblk"
          - "{{ lsblk_out.stdout_lines }}"
          - "{{ lsblk_out.stderr_lines }}"

    - name: Format the block device with xfs
      command: mkfs.xfs /dev/mapper/mpatha
      register: mkfs_out
    - debug:
        msg:
          - "# mkfs.xfs /dev/mapper/mpatha"
          - "{{ mkfs_out.stdout_lines }}"
          - "{{ mkfs_out.stderr_lines }}"

    - debug:
        msg: "Yay!! Block device '/dev/mapper/mpatha' is all ready to be mounted and used, go now!!"
